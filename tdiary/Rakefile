require 'tempfile'

task :default => "tdiary:core:spec-core"

## colorize: see lib/rake/file_utils_ext.rb
def Rake.rake_output_message(message)
  $stderr.puts "\e[32;1m#{message}\e[0m"
end

## coloreize: see fileutils.rb
module FileUtils
  alias fu_output_message_orig fu_output_message

  def fu_output_message(msg)
    fu_output_message_orig("\e[32;1m#{msg}\e[0m")
  end
  private_module_function :fu_output_message
end

def with_container(image: "crazyp83/tdiary:latest")
  t = Tempfile.new(['tdiary-container', '.txt'])
  t.close
  sh "docker run -d #{image} | tee #{t.path}"
  cid = File.read(t.path).strip
  sh "docker inspect -f '{{.Name}}' #{cid} | tee #{t.path}"
  cname = File.read(t.path).strip.sub(/\A\//, '')
  sleep 5
  ret = yield cname
ensure
  sh "docker kill #{cname}"
  sh "docker rm #{cname}"
  ret
end

namespace :tdiary do
  namespace :core do
    desc "run rake spec in tdiary-core"
    task "spec" do
      with_container do |cname|
        sh "docker exec #{cname} supervisorctl stop all"
        sh "docker exec #{cname} sudo -u debian -H bash -l -c \"cd ~/go/src/github.com/tdiary/tdiary-core; bundle\""
        sh "docker exec #{cname} sudo -u debian -H bash -l -c \"cd ~/go/src/github.com/tdiary/tdiary-core; bundle exec rake spec SPEC_OPTS='-f d -c'\""
      end
    end

    desc "run rake spec:core in tdiary-core"
    task "spec-core" do
      with_container do |cname|
        sh "docker exec #{cname} supervisorctl stop all"
        sh "docker exec #{cname} sudo -u debian -H bash -l -c \"cd ~/go/src/github.com/tdiary/tdiary-core; bundle\""
        sh "docker exec #{cname} sudo -u debian -H bash -l -c \"cd ~/go/src/github.com/tdiary/tdiary-core; bundle exec rake spec:core SPEC_OPTS='-f d -c'\""
      end
    end
  end

  { 'contrib'          => nil,
    'cache-redis'      => ->(cname){
      sh "docker exec #{cname} bash -c \"apt-get install -y --no-install-recommends redis-server; /etc/init.d/redis-server start\""
    },
    'cache-memcached'  => ->(cname){
      sh "docker exec #{cname} bash -c \"apt-get install -y --no-install-recommends memcached; /etc/init.d/memcached start\""
    },
    'cache-null'       => nil,
    'io-mongodb'       => nil,
    'io-rdb'           => nil,
    'style-emptdiary'  => nil,
    'style-etdiary'    => nil,
    'style-gfm'        => nil,
    'style-rd'         => nil
  }.each do |component, prereq|
    namespace component do
      desc "run rake spec in tdiary-#{component}"
      task :spec do
        with_container do |cname|
          prereq.call(cname) if prereq
          sh "docker exec #{cname} supervisorctl stop all"
          sh "docker exec #{cname} sudo -u debian -H bash -l -c \"cd ~/go/src/github.com/tdiary/tdiary-#{component}; bundle install --path vendor/bundle\""
          sh "docker exec #{cname} sudo -u debian -H bash -l -c \"cd ~/go/src/github.com/tdiary/tdiary-#{component}; bundle exec rake spec SPEC_OPTS='-f d -c'\""
        end
      end
    end
  end
end

